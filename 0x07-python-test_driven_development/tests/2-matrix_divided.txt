The ``2-matrix_divided`` module
================================

Using ``matrix_divided``

This is the 2-matrix_divided test file in reStructured format. First import ``matrix_divided`` from the ``2-matrix_divided`` module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Works with a matrix of integers/floats:

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6],
	...	[7, 8, 9]
	... ]
	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]
	
	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, "a", 6],
	...	[7, 8, 9]
	... ]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

The divisor can't be 0:
	
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

The length of each row in the matrix must be equal:
	
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6],
	...	[7, 8]
	... ]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size


